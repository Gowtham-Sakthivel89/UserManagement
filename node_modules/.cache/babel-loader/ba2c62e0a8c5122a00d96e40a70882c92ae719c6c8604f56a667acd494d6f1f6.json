{"ast":null,"code":"import { saveToLocalStorage, getFromLocalStorage } from '../../utils/storage';\n\n// Helper to get todos for current user\nconst getUserTodos = userId => {\n  const allTodos = getFromLocalStorage('todos') || [];\n  return allTodos.filter(todo => todo.userId === userId);\n};\n\n// Helper to save todos\nconst saveTodos = todos => {\n  saveToLocalStorage('todos', todos);\n};\n\n// Fetch todos for current user\nexport const fetchTodos = userId => async dispatch => {\n  dispatch({\n    type: 'FETCH_TODOS_REQUEST'\n  });\n  try {\n    // Simulate network delay\n    await new Promise(resolve => setTimeout(resolve, 300));\n    const todos = getUserTodos(userId);\n    dispatch({\n      type: 'FETCH_TODOS_SUCCESS',\n      payload: {\n        todos\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: 'TODOS_ERROR',\n      payload: {\n        error: error.message\n      }\n    });\n  }\n};\n\n// Add new todo\nexport const addTodo = todoData => async (dispatch, getState) => {\n  dispatch({\n    type: 'FETCH_TODOS_REQUEST'\n  });\n  try {\n    const {\n      auth\n    } = getState();\n    if (!auth.user) throw new Error('Not authenticated');\n    const newTodo = {\n      id: Date.now(),\n      // Simple ID generation\n      userId: auth.user.id,\n      title: todoData.title,\n      description: todoData.description || '',\n      completed: false,\n      createdAt: new Date().toISOString()\n    };\n    const currentTodos = getFromLocalStorage('todos') || [];\n    saveTodos([newTodo, ...currentTodos]);\n    dispatch({\n      type: 'ADD_TODO_SUCCESS',\n      payload: {\n        todo: newTodo\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: 'TODOS_ERROR',\n      payload: {\n        error: error.message\n      }\n    });\n    throw error;\n  }\n};\n\n// Update todo\nexport const updateTodo = (todoId, updates) => async (dispatch, getState) => {\n  dispatch({\n    type: 'FETCH_TODOS_REQUEST'\n  });\n  try {\n    const {\n      auth\n    } = getState();\n    if (!auth.user) throw new Error('Not authenticated');\n    const currentTodos = getFromLocalStorage('todos') || [];\n    const todoIndex = currentTodos.findIndex(t => t.id === todoId);\n    if (todoIndex === -1) throw new Error('Todo not found');\n    if (currentTodos[todoIndex].userId !== auth.user.id) throw new Error('Unauthorized');\n    const updatedTodo = {\n      ...currentTodos[todoIndex],\n      ...updates\n    };\n    const updatedTodos = [...currentTodos];\n    updatedTodos[todoIndex] = updatedTodo;\n    saveTodos(updatedTodos);\n    dispatch({\n      type: 'UPDATE_TODO_SUCCESS',\n      payload: {\n        todo: updatedTodo\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: 'TODOS_ERROR',\n      payload: {\n        error: error.message\n      }\n    });\n    throw error;\n  }\n};\n\n// Delete todo\nexport const deleteTodo = todoId => async (dispatch, getState) => {\n  dispatch({\n    type: 'FETCH_TODOS_REQUEST'\n  });\n  try {\n    const {\n      auth\n    } = getState();\n    if (!auth.user) throw new Error('Not authenticated');\n    const currentTodos = getFromLocalStorage('todos') || [];\n    const todo = currentTodos.find(t => t.id === todoId);\n    if (!todo) throw new Error('Todo not found');\n    if (todo.userId !== auth.user.id) throw new Error('Unauthorized');\n    const updatedTodos = currentTodos.filter(t => t.id !== todoId);\n    saveTodos(updatedTodos);\n    dispatch({\n      type: 'DELETE_TODO_SUCCESS',\n      payload: {\n        todoId\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: 'TODOS_ERROR',\n      payload: {\n        error: error.message\n      }\n    });\n    throw error;\n  }\n};\n\n// Set filter\nexport const setTodoFilter = filter => dispatch => {\n  dispatch({\n    type: 'SET_TODO_FILTER',\n    payload: {\n      filter\n    }\n  });\n};","map":{"version":3,"names":["saveToLocalStorage","getFromLocalStorage","getUserTodos","userId","allTodos","filter","todo","saveTodos","todos","fetchTodos","dispatch","type","Promise","resolve","setTimeout","payload","error","message","addTodo","todoData","getState","auth","user","Error","newTodo","id","Date","now","title","description","completed","createdAt","toISOString","currentTodos","updateTodo","todoId","updates","todoIndex","findIndex","t","updatedTodo","updatedTodos","deleteTodo","find","setTodoFilter"],"sources":["D:/React project/usermanagement/src/store/actions/todoActions.jsx"],"sourcesContent":["import { saveToLocalStorage, getFromLocalStorage } from '../../utils/storage';\r\n\r\n// Helper to get todos for current user\r\nconst getUserTodos = (userId) => {\r\n  const allTodos = getFromLocalStorage('todos') || [];\r\n  return allTodos.filter(todo => todo.userId === userId);\r\n};\r\n\r\n// Helper to save todos\r\nconst saveTodos = (todos) => {\r\n  saveToLocalStorage('todos', todos);\r\n};\r\n\r\n// Fetch todos for current user\r\nexport const fetchTodos = (userId) => async (dispatch) => {\r\n  dispatch({ type: 'FETCH_TODOS_REQUEST' });\r\n  \r\n  try {\r\n    // Simulate network delay\r\n    await new Promise(resolve => setTimeout(resolve, 300));\r\n    \r\n    const todos = getUserTodos(userId);\r\n    dispatch({\r\n      type: 'FETCH_TODOS_SUCCESS',\r\n      payload: { todos },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'TODOS_ERROR',\r\n      payload: { error: error.message },\r\n    });\r\n  }\r\n};\r\n\r\n// Add new todo\r\nexport const addTodo = (todoData) => async (dispatch, getState) => {\r\n  dispatch({ type: 'FETCH_TODOS_REQUEST' });\r\n  \r\n  try {\r\n    const { auth } = getState();\r\n    if (!auth.user) throw new Error('Not authenticated');\r\n    \r\n    const newTodo = {\r\n      id: Date.now(), // Simple ID generation\r\n      userId: auth.user.id,\r\n      title: todoData.title,\r\n      description: todoData.description || '',\r\n      completed: false,\r\n      createdAt: new Date().toISOString(),\r\n    };\r\n    \r\n    const currentTodos = getFromLocalStorage('todos') || [];\r\n    saveTodos([newTodo, ...currentTodos]);\r\n    \r\n    dispatch({\r\n      type: 'ADD_TODO_SUCCESS',\r\n      payload: { todo: newTodo },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'TODOS_ERROR',\r\n      payload: { error: error.message },\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Update todo\r\nexport const updateTodo = (todoId, updates) => async (dispatch, getState) => {\r\n  dispatch({ type: 'FETCH_TODOS_REQUEST' });\r\n  \r\n  try {\r\n    const { auth } = getState();\r\n    if (!auth.user) throw new Error('Not authenticated');\r\n    \r\n    const currentTodos = getFromLocalStorage('todos') || [];\r\n    const todoIndex = currentTodos.findIndex(t => t.id === todoId);\r\n    \r\n    if (todoIndex === -1) throw new Error('Todo not found');\r\n    if (currentTodos[todoIndex].userId !== auth.user.id) throw new Error('Unauthorized');\r\n    \r\n    const updatedTodo = {\r\n      ...currentTodos[todoIndex],\r\n      ...updates,\r\n    };\r\n    \r\n    const updatedTodos = [...currentTodos];\r\n    updatedTodos[todoIndex] = updatedTodo;\r\n    \r\n    saveTodos(updatedTodos);\r\n    \r\n    dispatch({\r\n      type: 'UPDATE_TODO_SUCCESS',\r\n      payload: { todo: updatedTodo },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'TODOS_ERROR',\r\n      payload: { error: error.message },\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Delete todo\r\nexport const deleteTodo = (todoId) => async (dispatch, getState) => {\r\n  dispatch({ type: 'FETCH_TODOS_REQUEST' });\r\n  \r\n  try {\r\n    const { auth } = getState();\r\n    if (!auth.user) throw new Error('Not authenticated');\r\n    \r\n    const currentTodos = getFromLocalStorage('todos') || [];\r\n    const todo = currentTodos.find(t => t.id === todoId);\r\n    \r\n    if (!todo) throw new Error('Todo not found');\r\n    if (todo.userId !== auth.user.id) throw new Error('Unauthorized');\r\n    \r\n    const updatedTodos = currentTodos.filter(t => t.id !== todoId);\r\n    saveTodos(updatedTodos);\r\n    \r\n    dispatch({\r\n      type: 'DELETE_TODO_SUCCESS',\r\n      payload: { todoId },\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: 'TODOS_ERROR',\r\n      payload: { error: error.message },\r\n    });\r\n    throw error;\r\n  }\r\n};\r\n\r\n// Set filter\r\nexport const setTodoFilter = (filter) => (dispatch) => {\r\n  dispatch({\r\n    type: 'SET_TODO_FILTER',\r\n    payload: { filter },\r\n  });\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}