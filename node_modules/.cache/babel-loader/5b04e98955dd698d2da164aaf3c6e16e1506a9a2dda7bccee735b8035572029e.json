{"ast":null,"code":"import { saveToLocalStorage, getFromLocalStorage, clearLocalStorage } from '../../utils/storage';\n\n// Mock user data\nconst mockUser = {\n  id: 1,\n  username: 'demo',\n  password: 'password123',\n  email: 'demo@example.com',\n  token: 'mock-auth-token-12345'\n};\n\n// Named export for login action\nexport const login = (username, password) => async dispatch => {\n  dispatch({\n    type: 'LOGIN_REQUEST'\n  });\n  try {\n    if (username === mockUser.username && password === mockUser.password) {\n      const {\n        password: _,\n        ...userData\n      } = mockUser;\n      saveToLocalStorage('user', userData);\n      dispatch({\n        type: 'LOGIN_SUCCESS',\n        payload: {\n          user: userData\n        }\n      });\n    } else {\n      throw new Error('Invalid credentials');\n    }\n  } catch (error) {\n    dispatch({\n      type: 'LOGIN_FAILURE',\n      payload: error.message\n    });\n    throw error;\n  }\n};\n\n// Named export for logout action\nexport const logout = () => dispatch => {\n  clearLocalStorage();\n  dispatch({\n    type: 'LOGOUT_SUCCESS'\n  });\n};\n\n// Named export for checkAuth action\nexport const checkAuth = () => dispatch => {\n  const user = getFromLocalStorage('user');\n  if (user) {\n    dispatch({\n      type: 'LOGIN_SUCCESS',\n      payload: {\n        user\n      }\n    });\n  }\n};\n\n// Export all actions as named exports\nexport default {\n  login,\n  logout,\n  checkAuth\n};","map":{"version":3,"names":["saveToLocalStorage","getFromLocalStorage","clearLocalStorage","mockUser","id","username","password","email","token","login","dispatch","type","_","userData","payload","user","Error","error","message","logout","checkAuth"],"sources":["D:/React project/usermanagement/src/store/actions/authActions.jsx"],"sourcesContent":["import { \r\n    saveToLocalStorage,\r\n    getFromLocalStorage,\r\n    clearLocalStorage\r\n  } from '../../utils/storage';\r\n  \r\n  // Mock user data\r\n  const mockUser = {\r\n    id: 1,\r\n    username: 'demo',\r\n    password: 'password123',\r\n    email: 'demo@example.com',\r\n    token: 'mock-auth-token-12345'\r\n  };\r\n  \r\n  // Named export for login action\r\n  export const login = (username, password) => async (dispatch) => {\r\n    dispatch({ type: 'LOGIN_REQUEST' });\r\n    \r\n    try {\r\n      if (username === mockUser.username && password === mockUser.password) {\r\n        const { password: _, ...userData } = mockUser;\r\n        saveToLocalStorage('user', userData);\r\n        \r\n        dispatch({\r\n          type: 'LOGIN_SUCCESS',\r\n          payload: { user: userData }\r\n        });\r\n      } else {\r\n        throw new Error('Invalid credentials');\r\n      }\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'LOGIN_FAILURE',\r\n        payload: error.message\r\n      });\r\n      throw error;\r\n    }\r\n  };\r\n  \r\n  // Named export for logout action\r\n  export const logout = () => (dispatch) => {\r\n    clearLocalStorage();\r\n    dispatch({ type: 'LOGOUT_SUCCESS' });\r\n  };\r\n  \r\n  // Named export for checkAuth action\r\n  export const checkAuth = () => (dispatch) => {\r\n    const user = getFromLocalStorage('user');\r\n    if (user) {\r\n      dispatch({\r\n        type: 'LOGIN_SUCCESS',\r\n        payload: { user }\r\n      });\r\n    }\r\n  };\r\n  \r\n  // Export all actions as named exports\r\n  export default {\r\n    login,\r\n    logout,\r\n    checkAuth\r\n  };"],"mappings":"AAAA,SACIA,kBAAkB,EAClBC,mBAAmB,EACnBC,iBAAiB,QACZ,qBAAqB;;AAE5B;AACA,MAAMC,QAAQ,GAAG;EACfC,EAAE,EAAE,CAAC;EACLC,QAAQ,EAAE,MAAM;EAChBC,QAAQ,EAAE,aAAa;EACvBC,KAAK,EAAE,kBAAkB;EACzBC,KAAK,EAAE;AACT,CAAC;;AAED;AACA,OAAO,MAAMC,KAAK,GAAGA,CAACJ,QAAQ,EAAEC,QAAQ,KAAK,MAAOI,QAAQ,IAAK;EAC/DA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAgB,CAAC,CAAC;EAEnC,IAAI;IACF,IAAIN,QAAQ,KAAKF,QAAQ,CAACE,QAAQ,IAAIC,QAAQ,KAAKH,QAAQ,CAACG,QAAQ,EAAE;MACpE,MAAM;QAAEA,QAAQ,EAAEM,CAAC;QAAE,GAAGC;MAAS,CAAC,GAAGV,QAAQ;MAC7CH,kBAAkB,CAAC,MAAM,EAAEa,QAAQ,CAAC;MAEpCH,QAAQ,CAAC;QACPC,IAAI,EAAE,eAAe;QACrBG,OAAO,EAAE;UAAEC,IAAI,EAAEF;QAAS;MAC5B,CAAC,CAAC;IACJ,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,qBAAqB,CAAC;IACxC;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdP,QAAQ,CAAC;MACPC,IAAI,EAAE,eAAe;MACrBG,OAAO,EAAEG,KAAK,CAACC;IACjB,CAAC,CAAC;IACF,MAAMD,KAAK;EACb;AACF,CAAC;;AAED;AACA,OAAO,MAAME,MAAM,GAAGA,CAAA,KAAOT,QAAQ,IAAK;EACxCR,iBAAiB,CAAC,CAAC;EACnBQ,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAiB,CAAC,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMS,SAAS,GAAGA,CAAA,KAAOV,QAAQ,IAAK;EAC3C,MAAMK,IAAI,GAAGd,mBAAmB,CAAC,MAAM,CAAC;EACxC,IAAIc,IAAI,EAAE;IACRL,QAAQ,CAAC;MACPC,IAAI,EAAE,eAAe;MACrBG,OAAO,EAAE;QAAEC;MAAK;IAClB,CAAC,CAAC;EACJ;AACF,CAAC;;AAED;AACA,eAAe;EACbN,KAAK;EACLU,MAAM;EACNC;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}