{"ast":null,"code":"// src/store/actions/profileActions.js\nexport const loadProfile = userData => async dispatch => {\n  dispatch({\n    type: 'LOAD_PROFILE_REQUEST'\n  });\n  try {\n    // Mock API call\n    await new Promise(resolve => setTimeout(resolve, 300));\n    const profileData = {\n      username: userData.username,\n      email: userData.email,\n      fullName: 'Demo User',\n      bio: 'This is a demo profile',\n      avatar: 'https://i.pravatar.cc/150?img=3'\n    };\n    dispatch({\n      type: 'LOAD_PROFILE_SUCCESS',\n      payload: profileData\n    });\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_FAILURE',\n      payload: error.message\n    });\n  }\n};\nexport const updateProfile = updatedData => async dispatch => {\n  dispatch({\n    type: 'UPDATE_PROFILE_REQUEST'\n  });\n  try {\n    // Mock API call\n    await new Promise(resolve => setTimeout(resolve, 500));\n    dispatch({\n      type: 'UPDATE_PROFILE_SUCCESS',\n      payload: updatedData\n    });\n    return {\n      success: true\n    };\n  } catch (error) {\n    dispatch({\n      type: 'PROFILE_FAILURE',\n      payload: error.message\n    });\n    return {\n      success: false,\n      error: error.message\n    };\n  }\n};","map":{"version":3,"names":["loadProfile","userData","dispatch","type","Promise","resolve","setTimeout","profileData","username","email","fullName","bio","avatar","payload","error","message","updateProfile","updatedData","success"],"sources":["D:/React project/usermanagement/src/store/actions/profileActions.jsx"],"sourcesContent":["// src/store/actions/profileActions.js\r\nexport const loadProfile = (userData) => async (dispatch) => {\r\n    dispatch({ type: 'LOAD_PROFILE_REQUEST' });\r\n    \r\n    try {\r\n      // Mock API call\r\n      await new Promise(resolve => setTimeout(resolve, 300));\r\n      \r\n      const profileData = {\r\n        username: userData.username,\r\n        email: userData.email,\r\n        fullName: 'Demo User',\r\n        bio: 'This is a demo profile',\r\n        avatar: 'https://i.pravatar.cc/150?img=3'\r\n      };\r\n      \r\n      dispatch({\r\n        type: 'LOAD_PROFILE_SUCCESS',\r\n        payload: profileData\r\n      });\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'PROFILE_FAILURE',\r\n        payload: error.message\r\n      });\r\n    }\r\n  };\r\n  \r\n  export const updateProfile = (updatedData) => async (dispatch) => {\r\n    dispatch({ type: 'UPDATE_PROFILE_REQUEST' });\r\n    \r\n    try {\r\n      // Mock API call\r\n      await new Promise(resolve => setTimeout(resolve, 500));\r\n      \r\n      dispatch({\r\n        type: 'UPDATE_PROFILE_SUCCESS',\r\n        payload: updatedData\r\n      });\r\n      \r\n      return { success: true };\r\n    } catch (error) {\r\n      dispatch({\r\n        type: 'PROFILE_FAILURE',\r\n        payload: error.message\r\n      });\r\n      \r\n      return { success: false, error: error.message };\r\n    }\r\n  };"],"mappings":"AAAA;AACA,OAAO,MAAMA,WAAW,GAAIC,QAAQ,IAAK,MAAOC,QAAQ,IAAK;EACzDA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAuB,CAAC,CAAC;EAE1C,IAAI;IACF;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IAEtD,MAAME,WAAW,GAAG;MAClBC,QAAQ,EAAEP,QAAQ,CAACO,QAAQ;MAC3BC,KAAK,EAAER,QAAQ,CAACQ,KAAK;MACrBC,QAAQ,EAAE,WAAW;MACrBC,GAAG,EAAE,wBAAwB;MAC7BC,MAAM,EAAE;IACV,CAAC;IAEDV,QAAQ,CAAC;MACPC,IAAI,EAAE,sBAAsB;MAC5BU,OAAO,EAAEN;IACX,CAAC,CAAC;EACJ,CAAC,CAAC,OAAOO,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAE,iBAAiB;MACvBU,OAAO,EAAEC,KAAK,CAACC;IACjB,CAAC,CAAC;EACJ;AACF,CAAC;AAED,OAAO,MAAMC,aAAa,GAAIC,WAAW,IAAK,MAAOf,QAAQ,IAAK;EAChEA,QAAQ,CAAC;IAAEC,IAAI,EAAE;EAAyB,CAAC,CAAC;EAE5C,IAAI;IACF;IACA,MAAM,IAAIC,OAAO,CAACC,OAAO,IAAIC,UAAU,CAACD,OAAO,EAAE,GAAG,CAAC,CAAC;IAEtDH,QAAQ,CAAC;MACPC,IAAI,EAAE,wBAAwB;MAC9BU,OAAO,EAAEI;IACX,CAAC,CAAC;IAEF,OAAO;MAAEC,OAAO,EAAE;IAAK,CAAC;EAC1B,CAAC,CAAC,OAAOJ,KAAK,EAAE;IACdZ,QAAQ,CAAC;MACPC,IAAI,EAAE,iBAAiB;MACvBU,OAAO,EAAEC,KAAK,CAACC;IACjB,CAAC,CAAC;IAEF,OAAO;MAAEG,OAAO,EAAE,KAAK;MAAEJ,KAAK,EAAEA,KAAK,CAACC;IAAQ,CAAC;EACjD;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}