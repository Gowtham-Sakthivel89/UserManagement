{"ast":null,"code":"var _jsxFileName = \"D:\\\\React project\\\\usermanagement\\\\src\\\\components\\\\Todo\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addTodo, updateTodo } from '../../store/actions/todoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = ({\n  editTodo,\n  setEditTodo\n}) => {\n  _s();\n  const dispatch = useDispatch();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  useEffect(() => {\n    if (editTodo) {\n      setTitle(editTodo.title);\n      setDescription(editTodo.description || '');\n    } else {\n      setTitle('');\n      setDescription('');\n    }\n  }, [editTodo]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!title.trim()) return;\n    if (editTodo) {\n      dispatch(updateTodo(editTodo.id, {\n        title,\n        description\n      }));\n      setEditTodo(null); // Reset edit mode after submission\n    } else {\n      dispatch(addTodo({\n        title,\n        description\n      }));\n    }\n    setTitle('');\n    setDescription('');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: editTodo ? 'Edit Task' : 'Add New Task'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          onChange: e => setTitle(e.target.value),\n          placeholder: \"Task title\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Description (optional)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: editTodo ? 'Update Task' : 'Add Task'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), editTodo && /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"cancel-btn\",\n          onClick: () => setEditTodo(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"zePIpNqQfj93SCPvymv1EsVOYGY=\", false, function () {\n  return [useDispatch];\n});\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useEffect","useDispatch","addTodo","updateTodo","jsxDEV","_jsxDEV","TodoForm","editTodo","setEditTodo","_s","dispatch","title","setTitle","description","setDescription","handleSubmit","e","preventDefault","trim","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","required","onClick","_c","$RefreshReg$"],"sources":["D:/React project/usermanagement/src/components/Todo/TodoForm.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addTodo, updateTodo } from '../../store/actions/todoActions';\r\n\r\nconst TodoForm = ({ editTodo, setEditTodo }) => {\r\n  const dispatch = useDispatch();\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (editTodo) {\r\n      setTitle(editTodo.title);\r\n      setDescription(editTodo.description || '');\r\n    } else {\r\n      setTitle('');\r\n      setDescription('');\r\n    }\r\n  }, [editTodo]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (!title.trim()) return;\r\n\r\n    if (editTodo) {\r\n      dispatch(updateTodo(editTodo.id, { title, description }));\r\n      setEditTodo(null);  // Reset edit mode after submission\r\n    } else {\r\n      dispatch(addTodo({ title, description }));\r\n    }\r\n\r\n    setTitle('');\r\n    setDescription('');\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-form\">\r\n      <h3>{editTodo ? 'Edit Task' : 'Add New Task'}</h3>\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"form-group\">\r\n          <input\r\n            type=\"text\"\r\n            value={title}\r\n            onChange={(e) => setTitle(e.target.value)}\r\n            placeholder=\"Task title\"\r\n            required\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <textarea\r\n            value={description}\r\n            onChange={(e) => setDescription(e.target.value)}\r\n            placeholder=\"Description (optional)\"\r\n          />\r\n        </div>\r\n        <div className=\"form-actions\">\r\n          <button type=\"submit\">\r\n            {editTodo ? 'Update Task' : 'Add Task'}\r\n          </button>\r\n          {editTodo && (\r\n            <button \r\n              type=\"button\" \r\n              className=\"cancel-btn\"\r\n              onClick={() => setEditTodo(null)}\r\n            >\r\n              Cancel\r\n            </button>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}