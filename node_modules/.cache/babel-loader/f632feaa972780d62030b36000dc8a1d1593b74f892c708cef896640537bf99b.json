{"ast":null,"code":"var _jsxFileName = \"D:\\\\React project\\\\usermanagement\\\\src\\\\components\\\\Todo\\\\TodoForm.jsx\",\n  _s = $RefreshSig$();\n// src/components/Todo/TodoForm.jsx\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addTodo } from '../../store/actions/todoActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoForm = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState('');\n  const dispatch = useDispatch();\n  const {\n    user\n  } = useSelector(state => state.auth);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setError('');\n    if (!title.trim()) {\n      setError('Todo title cannot be empty');\n      return;\n    }\n    const result = await dispatch(addTodo(title, user.username));\n    if (result.success) {\n      setTitle('');\n    } else {\n      setError(result.error || 'Failed to add todo');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: title,\n        onChange: e => setTitle(e.target.value),\n        placeholder: \"Add a new todo...\",\n        className: \"todo-input\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"add-btn\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(TodoForm, \"gfVzSIf5FZCV84taJTDLRj1sePw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["useState","useDispatch","useSelector","addTodo","jsxDEV","_jsxDEV","TodoForm","_s","title","setTitle","error","setError","dispatch","user","state","auth","handleSubmit","e","preventDefault","trim","result","username","success","className","children","onSubmit","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/React project/usermanagement/src/components/Todo/TodoForm.jsx"],"sourcesContent":["// src/components/Todo/TodoForm.jsx\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addTodo } from '../../store/actions/todoActions';\r\n\r\nconst TodoForm = () => {\r\n  const [title, setTitle] = useState('');\r\n  const [error, setError] = useState('');\r\n  const dispatch = useDispatch();\r\n  const { user } = useSelector(state => state.auth);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    \r\n    if (!title.trim()) {\r\n      setError('Todo title cannot be empty');\r\n      return;\r\n    }\r\n    \r\n    const result = await dispatch(addTodo(title, user.username));\r\n    \r\n    if (result.success) {\r\n      setTitle('');\r\n    } else {\r\n      setError(result.error || 'Failed to add todo');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"todo-form\">\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n          placeholder=\"Add a new todo...\"\r\n          className=\"todo-input\"\r\n        />\r\n        <button type=\"submit\" className=\"add-btn\">\r\n          Add\r\n        </button>\r\n      </form>\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TodoForm;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,OAAO,QAAQ,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1D,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACU,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMY,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9B,MAAM;IAAEY;EAAK,CAAC,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC;EAEjD,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClBP,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI,CAACH,KAAK,CAACW,IAAI,CAAC,CAAC,EAAE;MACjBR,QAAQ,CAAC,4BAA4B,CAAC;MACtC;IACF;IAEA,MAAMS,MAAM,GAAG,MAAMR,QAAQ,CAACT,OAAO,CAACK,KAAK,EAAEK,IAAI,CAACQ,QAAQ,CAAC,CAAC;IAE5D,IAAID,MAAM,CAACE,OAAO,EAAE;MAClBb,QAAQ,CAAC,EAAE,CAAC;IACd,CAAC,MAAM;MACLE,QAAQ,CAACS,MAAM,CAACV,KAAK,IAAI,oBAAoB,CAAC;IAChD;EACF,CAAC;EAED,oBACEL,OAAA;IAAKkB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBnB,OAAA;MAAMoB,QAAQ,EAAET,YAAa;MAAAQ,QAAA,gBAC3BnB,OAAA;QACEqB,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEnB,KAAM;QACboB,QAAQ,EAAGX,CAAC,IAAKR,QAAQ,CAACQ,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE;QAC1CG,WAAW,EAAC,mBAAmB;QAC/BP,SAAS,EAAC;MAAY;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACF7B,OAAA;QAAQqB,IAAI,EAAC,QAAQ;QAACH,SAAS,EAAC,SAAS;QAAAC,QAAA,EAAC;MAE1C;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL,CAAC,EACNxB,KAAK,iBAAIL,OAAA;MAAKkB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEd;IAAK;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnD,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAzCID,QAAQ;EAAA,QAGKL,WAAW,EACXC,WAAW;AAAA;AAAAiC,EAAA,GAJxB7B,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}